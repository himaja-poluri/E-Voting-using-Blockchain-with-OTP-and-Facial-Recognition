{"ast":null,"code":"var _jsxFileName = \"E:\\\\Teja\\\\College\\\\sem8\\\\final-year-project\\\\src\\\\Containers\\\\NewCandidate.js\";\nimport React, { Component } from 'react';\nimport \"../css/newCandidate.css\";\nimport { ELECTION_ADDRESS, ELECTION_ABI } from \"../config\";\nimport Election from \"../build/Election.json\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCandidate extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      account: {},\n      election: {},\n      candidate_name: \"\",\n      candidate_details: \"\"\n    };\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockChain();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n  async loadBlockChain() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n    if (networkData) {\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      this.setState({\n        election\n      });\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n  addCandidates() {\n    console.log(this.state);\n    this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n      window.location.assign(\"/admin\");\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newCandidateMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newCandInputs\",\n        placeholder: \"Candidate Name\",\n        id: \"candidate_name\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newCandInputs\",\n        placeholder: \"Candidate Party\",\n        id: \"candidate_details\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"newCandAddBtn\",\n        onClick: this.addCandidates,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default NewCandidate;","map":{"version":3,"names":["React","Component","ELECTION_ADDRESS","ELECTION_ABI","Election","Web3","jsxDEV","_jsxDEV","NewCandidate","constructor","arguments","state","account","election","candidate_name","candidate_details","handleChange","e","setState","target","id","value","componentWillMount","loadWeb3","loadBlockChain","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","Contract","abi","address","addCandidates","console","log","methods","addCandidate","send","from","once","receipt","location","assign","render","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["E:/Teja/College/sem8/final-year-project/src/Containers/NewCandidate.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/newCandidate.css\"\r\nimport {ELECTION_ADDRESS,ELECTION_ABI} from \"../config\";\r\nimport Election from \"../build/Election.json\";\r\nimport Web3 from 'web3';\r\n\r\nclass NewCandidate extends React.Component{\r\n    async componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBlockChain()\r\n    }\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n    }\r\n    async loadBlockChain(){\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Election.networks[networkId]\r\n        if(networkData) {\r\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\r\n            this.setState({ election })\r\n        } else {\r\n            window.alert('Election contract not deployed to detected network.')\r\n        }\r\n    }\r\n    addCandidates() {\r\n        console.log(this.state);\r\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details).send({ from: this.state.account })\r\n        .once('receipt', (receipt) => {\r\n            console.log(receipt);\r\n          window.location.assign(\"/admin\");\r\n        })\r\n    }\r\n    state={\r\n        account:{},\r\n        election:{}, \r\n        candidate_name:\"\",\r\n        candidate_details:\"\",\r\n\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"newCandidateMainDiv\">\r\n                <input className=\"newCandInputs\" placeholder='Candidate Name' id=\"candidate_name\" onChange={this.handleChange}></input>\r\n                <input className=\"newCandInputs\" placeholder='Candidate Party' id=\"candidate_details\" onChange={this.handleChange}></input>\r\n                <button className='newCandAddBtn' onClick={this.addCandidates}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewCandidate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}