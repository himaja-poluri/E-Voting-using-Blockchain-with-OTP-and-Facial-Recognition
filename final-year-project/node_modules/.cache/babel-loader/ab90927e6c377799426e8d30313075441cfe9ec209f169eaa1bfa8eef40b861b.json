{"ast":null,"code":"var _jsxFileName = \"E:\\\\Teja\\\\College\\\\sem8\\\\final-year-project\\\\src\\\\Containers\\\\NewCandidate.js\";\nimport React, { Component } from 'react';\nimport \"../css/newCandidate.css\";\nimport { ELECTION_ADDRESS, ELECTION_ABI } from \"../config\";\nimport Election from \"../build/Election.json\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCandidate extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      account: {},\n      election: {},\n      candidate_name: \"\",\n      candidate_details: \"\"\n    };\n    this.handleSubmit = e => {\n      console.log(\"hello from submit\");\n      console.log(this.state.candidate_name.length);\n      if (this.state.candidate_name.length != 0 && this.state.candidate_details.length != 0) {\n        console.log(\"inside condition\");\n        e.preventDefault();\n        this.addCandidates();\n      }\n    };\n  }\n  async componentWillMount() {\n    const res = await fetch(\"/isauth\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(\"here\");\n      if (res.status != 200) {\n        window.location.assign(\"/\");\n      }\n    });\n    await this.loadWeb3();\n    await this.loadBlockChain();\n  }\n  async loadWeb3() {\n    console.log(\"loadWeb3\");\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n  async loadBlockChain() {\n    console.log(\"loadBlockChain\");\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n    if (networkData) {\n      console.log(Election.abi);\n      console.log(networkData.address);\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      console.log(election);\n      this.setState({\n        election\n      });\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n  addCandidates() {\n    console.log(this.state.candidate_details);\n    this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n      window.location.assign(\"/admin\");\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newCandidateMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newCandInputs\",\n        placeholder: \"Candidate Name\",\n        id: \"candidate_name\",\n        onChange: e => {\n          this.setState({\n            candidate_name: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newCandInputs\",\n        placeholder: \"Candidate Party\",\n        id: \"candidate_details\",\n        onChange: e => {\n          this.setState({\n            candidate_details: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"newCandAddBtn\",\n        onClick: this.handleSubmit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default NewCandidate;","map":{"version":3,"names":["React","Component","ELECTION_ADDRESS","ELECTION_ABI","Election","Web3","jsxDEV","_jsxDEV","NewCandidate","constructor","arguments","state","account","election","candidate_name","candidate_details","handleSubmit","e","console","log","length","preventDefault","addCandidates","componentWillMount","res","fetch","method","credentials","headers","then","status","window","location","assign","loadWeb3","loadBlockChain","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","networkId","net","getId","networkData","networks","abi","address","Contract","methods","addCandidate","send","from","once","receipt","render","className","children","placeholder","id","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["E:/Teja/College/sem8/final-year-project/src/Containers/NewCandidate.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/newCandidate.css\"\r\nimport {ELECTION_ADDRESS,ELECTION_ABI} from \"../config\";\r\nimport Election from \"../build/Election.json\";\r\nimport Web3 from 'web3';\r\n\r\nclass NewCandidate extends React.Component{\r\n    state={\r\n        account:{},\r\n        election:{}, \r\n        candidate_name:\"\",\r\n        candidate_details:\"\",\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const res=await fetch(\"/isauth\",{\r\n            method:\"GET\",\r\n            credentials:\"include\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }).then((res)=>{\r\n            console.log(\"here\")\r\n            if(res.status!=200){\r\n                window.location.assign(\"/\");\r\n            }\r\n        })\r\n        await this.loadWeb3()\r\n        await this.loadBlockChain()\r\n    }\r\n    async loadWeb3() {\r\n        console.log(\"loadWeb3\")\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum) \r\n            await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n    }\r\n    async loadBlockChain(){\r\n        console.log(\"loadBlockChain\")\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        console.log(accounts)\r\n        this.setState({ account: accounts[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Election.networks[networkId]\r\n        if(networkData) {\r\n            console.log(Election.abi);\r\n            console.log(networkData.address)\r\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\r\n            console.log(election)\r\n            this.setState({ election })\r\n        } else {\r\n            window.alert('Election contract not deployed to detected network.')\r\n        }\r\n    }\r\n    addCandidates() {\r\n        console.log(this.state.candidate_details);\r\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details).send({ from: this.state.account })\r\n        .once('receipt', (receipt) => {\r\n            console.log(receipt);\r\n          window.location.assign(\"/admin\");\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        console.log(\"hello from submit\")\r\n        console.log(this.state.candidate_name.length)\r\n        if(this.state.candidate_name.length!=0 && this.state.candidate_details.length!=0){\r\n            console.log(\"inside condition\")\r\n            e.preventDefault();\r\n            this.addCandidates();\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"newCandidateMainDiv\">\r\n                <input className=\"newCandInputs\" placeholder='Candidate Name' id=\"candidate_name\" onChange={(e)=>{this.setState({candidate_name:e.target.value})}}></input>\r\n                <input className=\"newCandInputs\" placeholder='Candidate Party' id=\"candidate_details\" onChange={(e)=>{this.setState({candidate_details:e.target.value})}}></input>\r\n                <button className='newCandAddBtn' onClick={this.handleSubmit}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewCandidate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}